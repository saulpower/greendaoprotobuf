package com.saulpower.GreenWireTest.database;

import java.util.List;
import com.saulpower.GreenWireTest.database.DaoSession;
import de.greenrobot.dao.DaoException;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT. Enable "keep" sections if you want to edit. 
/**
 * Entity mapped to table ADDRESS.
 */
public class Address {

    private String plusFour;
    private String state;
    private String externalID;
    private String guid;
    private Long dateLastModified;
    private Float latitude;
    private String address2;
    private String county;
    private Boolean isDeleted;
    private String address1;
    private String tractID;
    private Integer version;
    private Long id;
    private Long dateCreated;
    private transient long phoneNumbersOUId;
    private transient long addressesStudentId;
    private String stateID;
    private String name;
    private transient long addressesOUId;
    private String description;
    private String tagString;
    private Long tenantID;
    private transient long saveResultSaveResultId;
    private String countyID;
    private String blockGroupID;
    private String zipCode;
    private String blockID;
    private String city;
    private Float longitude;
    private transient long addressesPersonId;

    /** Used to resolve relations */
    private transient DaoSession daoSession;

    /** Used for active entity operations. */
    private transient AddressDao myDao;

    private SaveResult saveResult;
    private Long saveResult__resolvedKey;

    private List<CustomValue> customValues;

    public Address() {
    }

    public Address(Long id) {
        this.id = id;
    }

    public Address(String plusFour, String state, String externalID, String guid, Long dateLastModified, Float latitude, String address2, String county, Boolean isDeleted, String address1, String tractID, Integer version, Long id, Long dateCreated, long phoneNumbersOUId, long addressesStudentId, String stateID, String name, long addressesOUId, String description, String tagString, Long tenantID, long saveResultSaveResultId, String countyID, String blockGroupID, String zipCode, String blockID, String city, Float longitude, long addressesPersonId) {
        this.plusFour = plusFour;
        this.state = state;
        this.externalID = externalID;
        this.guid = guid;
        this.dateLastModified = dateLastModified;
        this.latitude = latitude;
        this.address2 = address2;
        this.county = county;
        this.isDeleted = isDeleted;
        this.address1 = address1;
        this.tractID = tractID;
        this.version = version;
        this.id = id;
        this.dateCreated = dateCreated;
        this.phoneNumbersOUId = phoneNumbersOUId;
        this.addressesStudentId = addressesStudentId;
        this.stateID = stateID;
        this.name = name;
        this.addressesOUId = addressesOUId;
        this.description = description;
        this.tagString = tagString;
        this.tenantID = tenantID;
        this.saveResultSaveResultId = saveResultSaveResultId;
        this.countyID = countyID;
        this.blockGroupID = blockGroupID;
        this.zipCode = zipCode;
        this.blockID = blockID;
        this.city = city;
        this.longitude = longitude;
        this.addressesPersonId = addressesPersonId;
    }

    /** called by internal mechanisms, do not call yourself. */
    public void __setDaoSession(DaoSession daoSession) {
        this.daoSession = daoSession;
        myDao = daoSession != null ? daoSession.getAddressDao() : null;
    }

    public String getPlusFour() {
        return plusFour;
    }

    public void setPlusFour(String plusFour) {
        this.plusFour = plusFour;
    }

    public String getState() {
        return state;
    }

    public void setState(String state) {
        this.state = state;
    }

    public String getExternalID() {
        return externalID;
    }

    public void setExternalID(String externalID) {
        this.externalID = externalID;
    }

    public String getGuid() {
        return guid;
    }

    public void setGuid(String guid) {
        this.guid = guid;
    }

    public Long getDateLastModified() {
        return dateLastModified;
    }

    public void setDateLastModified(Long dateLastModified) {
        this.dateLastModified = dateLastModified;
    }

    public Float getLatitude() {
        return latitude;
    }

    public void setLatitude(Float latitude) {
        this.latitude = latitude;
    }

    public String getAddress2() {
        return address2;
    }

    public void setAddress2(String address2) {
        this.address2 = address2;
    }

    public String getCounty() {
        return county;
    }

    public void setCounty(String county) {
        this.county = county;
    }

    public Boolean getIsDeleted() {
        return isDeleted;
    }

    public void setIsDeleted(Boolean isDeleted) {
        this.isDeleted = isDeleted;
    }

    public String getAddress1() {
        return address1;
    }

    public void setAddress1(String address1) {
        this.address1 = address1;
    }

    public String getTractID() {
        return tractID;
    }

    public void setTractID(String tractID) {
        this.tractID = tractID;
    }

    public Integer getVersion() {
        return version;
    }

    public void setVersion(Integer version) {
        this.version = version;
    }

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public Long getDateCreated() {
        return dateCreated;
    }

    public void setDateCreated(Long dateCreated) {
        this.dateCreated = dateCreated;
    }

    public long getPhoneNumbersOUId() {
        return phoneNumbersOUId;
    }

    public void setPhoneNumbersOUId(long phoneNumbersOUId) {
        this.phoneNumbersOUId = phoneNumbersOUId;
    }

    public long getAddressesStudentId() {
        return addressesStudentId;
    }

    public void setAddressesStudentId(long addressesStudentId) {
        this.addressesStudentId = addressesStudentId;
    }

    public String getStateID() {
        return stateID;
    }

    public void setStateID(String stateID) {
        this.stateID = stateID;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public long getAddressesOUId() {
        return addressesOUId;
    }

    public void setAddressesOUId(long addressesOUId) {
        this.addressesOUId = addressesOUId;
    }

    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public String getTagString() {
        return tagString;
    }

    public void setTagString(String tagString) {
        this.tagString = tagString;
    }

    public Long getTenantID() {
        return tenantID;
    }

    public void setTenantID(Long tenantID) {
        this.tenantID = tenantID;
    }

    public long getSaveResultSaveResultId() {
        return saveResultSaveResultId;
    }

    public void setSaveResultSaveResultId(long saveResultSaveResultId) {
        this.saveResultSaveResultId = saveResultSaveResultId;
    }

    public String getCountyID() {
        return countyID;
    }

    public void setCountyID(String countyID) {
        this.countyID = countyID;
    }

    public String getBlockGroupID() {
        return blockGroupID;
    }

    public void setBlockGroupID(String blockGroupID) {
        this.blockGroupID = blockGroupID;
    }

    public String getZipCode() {
        return zipCode;
    }

    public void setZipCode(String zipCode) {
        this.zipCode = zipCode;
    }

    public String getBlockID() {
        return blockID;
    }

    public void setBlockID(String blockID) {
        this.blockID = blockID;
    }

    public String getCity() {
        return city;
    }

    public void setCity(String city) {
        this.city = city;
    }

    public Float getLongitude() {
        return longitude;
    }

    public void setLongitude(Float longitude) {
        this.longitude = longitude;
    }

    public long getAddressesPersonId() {
        return addressesPersonId;
    }

    public void setAddressesPersonId(long addressesPersonId) {
        this.addressesPersonId = addressesPersonId;
    }

    /** To-one relationship, resolved on first access. */
    public SaveResult getSaveResult() {
        long __key = this.saveResultSaveResultId;
        if (saveResult__resolvedKey == null || !saveResult__resolvedKey.equals(__key)) {
            if (daoSession == null) {
                throw new DaoException("Entity is detached from DAO context");
            }
            SaveResultDao targetDao = daoSession.getSaveResultDao();
            SaveResult saveResultNew = targetDao.load(__key);
            synchronized (this) {
                saveResult = saveResultNew;
            	saveResult__resolvedKey = __key;
            }
        }
        return saveResult;
    }

    public void setSaveResult(SaveResult saveResult) {
        if (saveResult == null) {
            throw new DaoException("To-one property 'saveResultSaveResultId' has not-null constraint; cannot set to-one to null");
        }
        synchronized (this) {
            this.saveResult = saveResult;
            saveResultSaveResultId = saveResult.getId();
            saveResult__resolvedKey = saveResultSaveResultId;
        }
    }

    /** To-many relationship, resolved on first access (and after reset). Changes to to-many relations are not persisted, make changes to the target entity. */
    public List<CustomValue> getCustomValues() {
        if (customValues == null) {
            if (daoSession == null) {
                throw new DaoException("Entity is detached from DAO context");
            }
            CustomValueDao targetDao = daoSession.getCustomValueDao();
            List<CustomValue> customValuesNew = targetDao._queryAddress_CustomValues(id);
            synchronized (this) {
                if(customValues == null) {
                    customValues = customValuesNew;
                }
            }
        }
        return customValues;
    }

    /** Resets a to-many relationship, making the next get call to query for a fresh result. */
    public synchronized void resetCustomValues() {
        customValues = null;
    }

    /** Convenient call for {@link AbstractDao#delete(Object)}. Entity must attached to an entity context. */
    public void delete() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.delete(this);
    }

    /** Convenient call for {@link AbstractDao#update(Object)}. Entity must attached to an entity context. */
    public void update() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.update(this);
    }

    /** Convenient call for {@link AbstractDao#refresh(Object)}. Entity must attached to an entity context. */
    public void refresh() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.refresh(this);
    }

}
